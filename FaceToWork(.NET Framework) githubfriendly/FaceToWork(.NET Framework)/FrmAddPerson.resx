<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        UlwAAAAASUVORK5CYII=
</value>
  </data>
</root>